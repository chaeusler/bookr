subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()

        maven {
            // for arquillian
            url "https://repository.jboss.org/nexus/content/repositories/public"
        }
    }

    configurations {
        apiOutput
        commonOutput
        testOutput.extendsFrom testCompile
    }

    task apiJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.output
        classifier = 'api'
        include "ch/haeuslers/bookr/${project.name}/api/**"
    }

    task commonJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.output
        classifier = 'common'
        include "ch/haeuslers/bookr/${project.name}/common/**"
    }

    task testJar(type: Jar, dependsOn: testClasses) {
        from sourceSets.test.output
        classifier = 'test'
    }

    jar {
        exclude "ch/haeuslers/bookr/${project.name}/api/**"
        exclude "ch/haeuslers/bookr/${project.name}/common/**"
    }

    artifacts {
        apiOutput apiJar
        commonOutput commonJar
        testOutput testJar
    }

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.12'
        compile 'javax:javaee-api:7.0'

        //dependencies for using spock framework
        testCompile "org.codehaus.groovy:groovy-all:2.4.1"
        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"//1.0-groovy-2.4"
        //testCompile "junit:junit:4.8.1"
        testCompile "org.jboss.arquillian.container:arquillian-container-test-api"//:1.1.7.Final"
        testCompile "org.jboss.shrinkwrap.descriptors:shrinkwrap-descriptors-impl-javaee:2.0.0-alpha-7"
        testCompile "org.jboss.arquillian.spock:arquillian-spock-container:1.0.0.Beta3"

        testCompile "org.jboss.arquillian.extension:arquillian-jacoco:1.0.0.Alpha8"
        //testCompile "org.jacoco:org.jacoco.core:${project.jacocoToolVersion}"

        //testCompile "org.jboss.arquillian.junit:arquillian-junit-container:1.1.7.Final"
        testCompile "org.wildfly:wildfly-arquillian-container-remote:8.2.0.Final"
        //testCompile "org.wildfly:wildfly-arquillian-container-embedded:8.2.0.Final"
        testCompile "org.jacoco:org.jacoco.core:0.7.4.201502262128"
        testCompile "io.undertow:undertow-websockets-jsr:1.2.6.Final"
        testCompile "org.jboss.resteasy:resteasy-client:3.0.10.Final"
        testCompile "org.jboss.resteasy:resteasy-jackson-provider:3.0.10.Final"
        testCompile "org.jboss.resteasy:resteasy-json-p-provider:3.0.10.Final"
    }
}

/*
 * Module dependencies.
 */
moduleDependency 'person', 'core', ['api', 'common', 'test']
moduleDependency 'booking', 'person', ['api', 'common', 'test']
moduleDependency 'booking', 'core', ['api', 'common', 'test']
moduleDependency 'booking', 'project', ['api', 'common', 'test']
moduleDependency 'project', 'person', ['api', 'common', 'test']
moduleDependency 'project', 'core', ['api', 'common', 'test']
moduleDependency 'authorization', 'person', ['api', 'common', 'test']
moduleDependency 'authorization', 'core', ['api', 'common', 'test']

/**
 * Defines a dependency from a module to another.
 *
 * @param module
 * @param dependsOnModule
 * @param packages - a list which can contain 'api', 'common' or 'test'
 * @return nothing
 */
def moduleDependency(String module, String dependsOnModule, List<String> packages) {
    project(":modules:${module}") {
        dependencies {
            packages.each { pckg ->
                if ('test'.equals(pckg)) {
                    testCompile project(path: ":modules:${dependsOnModule}", configuration: "${pckg}Output")
                } else {
                    compile project(path: ":modules:${dependsOnModule}", configuration: "${pckg}Output")
                }
            }
        }
    }
}
